var search_data = {"index":{"searchIndex":["cashregister","testcashregister","calculate_change_from_file()","calculate_change_hash()","calculate_change_string()","get_denomination_order_array()","get_denomination_value_hash()","test_calculate_change_from_file()","test_calculate_change_from_file_nil_and_empty()","test_calculate_change_hash()","test_calculate_change_hash_invalid_parameters()","test_calculate_change_hash_random()","test_calculate_change_string()","cashregister.gemspec","readme","rakefile","datafile1.csv","datafile2.csv"],"longSearchIndex":["cashregister","testcashregister","cashregister#calculate_change_from_file()","cashregister#calculate_change_hash()","cashregister#calculate_change_string()","cashregister::get_denomination_order_array()","cashregister::get_denomination_value_hash()","testcashregister#test_calculate_change_from_file()","testcashregister#test_calculate_change_from_file_nil_and_empty()","testcashregister#test_calculate_change_hash()","testcashregister#test_calculate_change_hash_invalid_parameters()","testcashregister#test_calculate_change_hash_random()","testcashregister#test_calculate_change_string()","","","","",""],"info":[["CashRegister","","CashRegister.html","","<p>A class for calculating change denominations.\n<p>All methods will use the most efficient composition of denominations, …\n"],["TestCashRegister","","TestCashRegister.html","","<p>Test class for CashRegister.rb\n"],["calculate_change_from_file","CashRegister","CashRegister.html#method-i-calculate_change_from_file","(filename)","<p>Calculates change denominations in batch from csv file. Generates an output\nfile of the same name with …\n"],["calculate_change_hash","CashRegister","CashRegister.html#method-i-calculate_change_hash","(owed, paid)","<p>Calculates change denominations for given owed and paid amounts.  Returns a\nhash map containing the denomination …\n"],["calculate_change_string","CashRegister","CashRegister.html#method-i-calculate_change_string","(owed, paid)","<p>Calculates change denominations for given owed and paid amounts.  Returns a\nhuman-readable string describing …\n"],["get_denomination_order_array","CashRegister","CashRegister.html#method-c-get_denomination_order_array","()","<p>Returns an array of labels representing the standard denomination\ncalculation order.\n"],["get_denomination_value_hash","CashRegister","CashRegister.html#method-c-get_denomination_value_hash","()","<p>Returns a hash of label/value pairs representing the value in cents of each\ndenomination.\n"],["test_calculate_change_from_file","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_from_file","()","<p>Test processing a valid transaction file\n"],["test_calculate_change_from_file_nil_and_empty","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_from_file_nil_and_empty","()","<p>Test invalid transaction filenames\n"],["test_calculate_change_hash","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_hash","()","<p>Test cases for processing a single transaction that returns a hash map\n"],["test_calculate_change_hash_invalid_parameters","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_hash_invalid_parameters","()","<p>Test processing a single transaction with invalid parameters\n"],["test_calculate_change_hash_random","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_hash_random","()","<p>Test cases for randomized change composition\n"],["test_calculate_change_string","TestCashRegister","TestCashRegister.html#method-i-test_calculate_change_string","()","<p>Test processing a single transaction that returns a human-readable string\n"],["CashRegister.gemspec","","CashRegister_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"],["README","","README_md.html","","<p>Cash Register\n<p>The Problem\n<p>Creative Cash Draw Solutions is a client who wants to provide something\ndifferent …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rake/testtask&#39;\n<p>Rake::TestTask.new do |t|\n\n<pre>t.libs &lt;&lt; &quot;tests&quot;\nt.test_files = FileList[&#39;tests/test*.rb&#39;] ...</pre>\n"],["datafile1.csv","","tests/datafile1_csv.html","","<p>1.50,2\n\n<pre>1.24     ,      2</pre>\n<p>0.73,3.00\n"],["datafile2.csv","","tests/datafile2_csv.html","","<p>2.12,3.00 1.97,2.00 3.33,5.00\n"]]}}